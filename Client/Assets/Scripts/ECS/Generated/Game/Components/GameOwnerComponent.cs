//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Lockstep.ECS.Game.OwnerComponent owner { get { return (Lockstep.ECS.Game.OwnerComponent)GetComponent(GameComponentsLookup.Owner); } }
    public bool hasOwner { get { return HasComponent(GameComponentsLookup.Owner); } }

    public void AddOwner(int newOwnerID) {
        var index = GameComponentsLookup.Owner;
        var component = CreateComponent<Lockstep.ECS.Game.OwnerComponent>(index);
        component.ownerID = newOwnerID;
        AddComponent(index, component);
    }

    public void ReplaceOwner(int newOwnerID) {
        var index = GameComponentsLookup.Owner;
        var component = CreateComponent<Lockstep.ECS.Game.OwnerComponent>(index);
        component.ownerID = newOwnerID;
        ReplaceComponent(index, component);
    }

    public void RemoveOwner() {
        RemoveComponent(GameComponentsLookup.Owner);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOwner;

    public static Entitas.IMatcher<GameEntity> Owner {
        get {
            if (_matcherOwner == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Owner);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOwner = matcher;
            }

            return _matcherOwner;
        }
    }
}
